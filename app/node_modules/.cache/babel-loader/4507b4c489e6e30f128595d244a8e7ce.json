{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\EntiretyWebApp\\\\app\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Form.css'; // import { Link } from 'react-router-dom';\n// import UserPage from './UserPage';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false); // User Login info\n  // const database = [\n  //   {\n  //     username: \"user1\",\n  //     password: \"pass1\"\n  //   },\n  //   {\n  //     username: \"user2\",\n  //     password: \"pass2\"\n  //   }\n  // ];\n  // const navigate = useNavigate();\n\n  let database;\n  let fetchRes = fetch(\"http://127.0.0.1:8000/user\");\n  fetchRes.then(res => res.json()).then(users => {\n    console.log(users);\n    database = users;\n  });\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0]; // Find user login info\n\n    const userData = database.find(user => user.UserName === uname.value); // Compare user info\n\n    if (userData) {\n      if (userData.Password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true); // Redirect to User's home page with products list\n        //   navigate('/user');\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Desktop/EntiretyWebApp/app/src/Login.js"],"names":["React","useState","Login","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","fetchRes","fetch","then","res","json","users","console","log","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","UserName","value","Password","name","message","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './Form.css';\r\n// import { Link } from 'react-router-dom';\r\n// import UserPage from './UserPage';\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n  \r\n\r\nfunction Login() {\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n  \r\n    // User Login info\r\n    // const database = [\r\n    //   {\r\n    //     username: \"user1\",\r\n    //     password: \"pass1\"\r\n    //   },\r\n    //   {\r\n    //     username: \"user2\",\r\n    //     password: \"pass2\"\r\n    //   }\r\n    // ];\r\n\r\n    // const navigate = useNavigate();\r\n\r\n\r\n    let database;\r\n    let fetchRes = fetch(\"http://127.0.0.1:8000/user\");\r\n    fetchRes.then(res =>\r\n        res.json()).then(users => {\r\n            console.log(users)\r\n            database = users;\r\n        })\r\n  \r\n    const errors = {\r\n      uname: \"invalid username\",\r\n      pass: \"invalid password\"\r\n    };\r\n  \r\n    const handleSubmit = (event) => {\r\n      //Prevent page reload\r\n      event.preventDefault();\r\n  \r\n      var { uname, pass } = document.forms[0];\r\n  \r\n      // Find user login info\r\n      const userData = database.find((user) => user.UserName === uname.value);\r\n  \r\n      // Compare user info\r\n      if (userData) {\r\n        if (userData.Password !== pass.value) {\r\n          // Invalid password\r\n          setErrorMessages({ name: \"pass\", message: errors.pass });\r\n        } else {\r\n          setIsSubmitted(true);\r\n          // Redirect to User's home page with products list\r\n        //   navigate('/user');\r\n        }\r\n      } else {\r\n        // Username not found\r\n        setErrorMessages({ name: \"uname\", message: errors.uname });\r\n      }\r\n    };\r\n  \r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name) =>\r\n      name === errorMessages.name && (\r\n        <div className=\"error\">{errorMessages.message}</div>\r\n      );\r\n  \r\n    // JSX code for login form\r\n    const renderForm = (\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-container\">\r\n            <label>Username </label>\r\n            <input type=\"text\" name=\"uname\" required />\r\n            {renderErrorMessage(\"uname\")}\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label>Password </label>\r\n            <input type=\"password\" name=\"pass\" required />\r\n            {renderErrorMessage(\"pass\")}\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  \r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"login-form\">\r\n          <div className=\"title\">Sign In</div>\r\n          {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n          {/* {isSubmitted ? history.push('/user') : renderForm} */}\r\n          {/* Create a User component that will have a logout button */}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}